type Query {
    getAllProducts(filter: ProductFilter): [Product]
    getProductById(id: Int!) : ProductAllImages
    getAllCategories: [Category]
}
type Category{
    id: Int
    category: String
}
type ProductAllImages {
    id: String
    product: String
    price: Float
    images: [Image]
}
type Product{
    id: String
    product: String
    price: Float
    images: Image
}
type Image{
    id: String
    description: String
    url: String
}
type Mutation{
    createProduct(input: ProductInput) : Product
    updateProduct(id: String!, input: ProductUpdateInput) : Product
    deleteProduct(id: String!) : Boolean
    createImageOnProduct(productId: String!, input: ImageInput): Image
    deleteImageOnProduct(productId: String!, id:String!) : Boolean
    createCategory(input: CategoryInput) : Category
    removeCategory(id:Int!):Boolean
    updateCategory(id:Int!, input: CategoryInput) : Category
}
input ProductFilter{
    categoryId: String
    }
input ProductInput{
    product: String!
    price: Float!
}
input ImageInput{
    description: String!
    url: String!
}
input ProductUpdateInput{
    product: String
    price: Float
    categories:[String]
}
input CategoryInput{
    category: String!
}
